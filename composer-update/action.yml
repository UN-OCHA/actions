name: "Composer Update Workflow"
description: "Updates all specified composer packages and creates a pull request with the changes."

inputs:
  github_access_token:
    description: "A GitHub personal access token."
    required: true
    type: string
  patch_branch:
    description: "The base branch to create a pull request against when there are updates."
    required: false
    default: "develop"
    type: string
  patch_packages:
    description: "The package(s) to check for updates."
    required: false
    default: "drupal/*"
    type: string
  patch_author:
    description: "A git identifier for the author of the patch that is to be created."
    required: false
    type: string
    default: "unocha-jenkins <ops+github@reliefweb.int>"
  patch_maintainers:
    description: "A comma delimited list of repository maintainers who will be assigned for review."
    required: false
    type: string
    default: "digital-services-drupal-maintainers"
  php_version:
    description: "The PHP version to use for all composer commands."
    required: false
    type: string
    default: "8.0"
  slack_bot_token:
    description: "The secret slack authentication token"
    required: false
    type: string
  slack_channel_name:
    description: "The slack channel to send the message to"
    required: false
    type: string
  flowdock_token:
    description: "The flowdock token. This is ignored."
    required: false
    type: string

runs:
  using: "composite"
  steps:

  - name: Setup PHP with PECL extension
    uses: shivammathur/setup-php@v2
    with:
      php-version: ${{ inputs.php_version }}
      tools: composer
    env:
      fail-fast: true

  - name: Software versions
    id: versions
    uses: mathiasvr/command-output@v1
    with:
      run: php --version && composer --version

  - name: Git work-around
    id: workaround
    uses: mathiasvr/command-output@v1
    with:
      run: git config --global --add safe.directory ${{ github.workspace }}

  - name: Checkout code
    id: checkout
    uses: actions/checkout@v3
    with:
      ref: '${{ inputs.patch_branch }}'

  - name: Composer Install
    id: install
    uses: mathiasvr/command-output@v1
    with:
      run: composer install
    continue-on-error: true

  - name: Composer Outdated
    id: outdated
    uses: mathiasvr/command-output@v1
    with:
      run: composer outdated ${{ inputs.patch_packages }}
    continue-on-error: false

  - name: Composer Update
    id: update
    uses: mathiasvr/command-output@v1
    with:
      run: composer update --with-all-dependencies ${{ inputs.patch_packages }}
    continue-on-error: false

  - name: Create Pull Request
    id: pull
    uses: peter-evans/create-pull-request@v4
    with:
      token: ${{ inputs.github_access_token }}
      commit-message: "chore: Update all outdated ${{ inputs.patch_packages }} packages."
      title: "Periodic Updates"
      body: |
        - Automatic pull request after runing composer update ${{ inputs.patch_packages }}.
      committer: ${{ inputs.patch_author }}
      author: ${{ inputs.patch_author }}
      branch: update/patch
      branch-suffix: short-commit-hash
      base: ${{ inputs.patch_branch }}
      assignees: ${{ inputs.patch_maintainers}}
      team-reviewers: ${{ inputs.patch_maintainers}}
    continue-on-error: true

  - name: Post Comment
    uses: actions/github-script@0.9.0
    env:
      VERSIONS: "software versions\n${{ steps.versions.outputs.stdout }}"
      OUTDATED: "composer outdated\n${{ steps.outdated.outputs.stdout }}"
      UPDATES: "composer update\n${{ steps.update.outputs.stdout }}"
      ERRORS: "composer errors\n${{ steps.update.outputs.stderr }}"
    with:
      github-token: ${{ inputs.github_access_token }}
      script: |
        const output = `#### Composer Update \`${{ steps.update.outcome }}\`
        #### Running \`composer update --with-all-dependencies ${{ inputs.patch_packages }}\` to update all Drupal core and contrib packages
        
        <details><summary>Software Versions</summary>
        
        \`\`\`${process.env.VERSIONS}\`\`\`
        
        </details>
        <details><summary>Composer Outdated</summary>
        
        \`\`\`${process.env.OUTDATED}\`\`\`
        
        </details>
        <details><summary>Composer Update Status</summary>

        \`\`\`${process.env.UPDATES}\`\`\`
        
        </details>
        <details><summary>Composer Update Messages</summary>
        
        \`\`\`${process.env.ERRORS}\`\`\`
        
        </details>
        
        *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;
        
        github.issues.createComment({
          issue_number: ${{ steps.pull.outputs.pull-request-number }},
          owner: context.repo.owner,
          repo: context.repo.repo,
          body: output
        })

  - name: Slack Success Notification
    id: slack_success
    if: success() && inputs.slack_bot_token && inputs.slack_channel_name
    uses: slackapi/slack-github-action@v1.19.0
    with:
      channel-id: '${{ inputs.slack_channel_name }}'
      payload: |
        {
          "text": "Created an up to date pull request for ${{ github.repository }} from ${{ github.ref }} ${{ job.status }}",
          "blocks": [
            {
              "type": "section",
              "text": {
                "type": "mrkdwn",
                "text": "Created an up to date pull request for ${{ github.repository }} from ${{ github.ref }} ${{ job.status }} (<${{ steps.pull.outputs.pull-request-url }}|Review>)"
              }
            }
          ]
        }
    env:
      SLACK_BOT_TOKEN: ${{ inputs.slack_bot_token }}

  - name: Slack Failure Notification
    id: slack_failure
    if: failure() && inputs.slack_bot_token && inputs.slack_channel_name
    uses: slackapi/slack-github-action@v1.19.0
    with:
      channel-id: '${{ inputs.slack_channel_name }}'
      payload: |
        {
          "text": "Failed to apply updates for ${{ github.repository }}",
          "blocks": [
            {
              "type": "section",
              "text": {
                "type": "mrkdwn",
                "text": "Failed to apply updates for ${{ github.repository }} (<https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|Review>)"
              }
            }
          ]
        }
    env:
      SLACK_BOT_TOKEN: ${{ inputs.slack_bot_token }}
